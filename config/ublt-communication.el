(require 'ublt-util)


;;; Twitter
(use-package twittering-mode
  :defer t
  :custom ((twittering-status-format
            "%i %s%RT{%FACE[ublt-twitter-meta-face]{ â™½ }%FACE[ublt-twitter-meta-retweet]{%s}}%FACE[ublt-twitter-meta-reply]{%r}%FACE[ublt-twitter-meta-face]{ %@}%FACE[ublt-twitter-meta-location]{ from %f%L}\n           %t")
           (twittering-url-show-status nil)
           (twittering-timer-interval 600)
           (twittering-use-master-password t)
           (twittering-use-icon-storage t)
           (twittering-display-remaining t)
           (twittering-use-native-retweet t)
           (twittering-number-of-tweets-on-retrieval 100))
  :config
  (twittering-icon-mode +1)

  (defgroup ubolonton nil ""
    :group 'personal)

  (defface ublt-twitter-meta-face
    '((t (:inherit font-lock-comment-face)))
    "")
  (defface ublt-twitter-meta-reply
    '((t (:inherit ublt-twitter-meta-face)))
    "")
  (defface ublt-twitter-meta-retweet
    '((t (:inherit ublt-twitter-meta-face)))
    "")
  (defface ublt-twitter-meta-location
    '((t (:inherit ublt-twitter-meta-face)))
    "")

  (add-hook 'twittering-mode-hook #'hl-line-mode)
  (add-hook 'twittering-mode-hook #'adaptive-wrap-prefix-mode)
  (add-hook 'twittering-edit-mode-hook (ublt/off-fn 'auto-fill-mode))
  (add-hook 'twittering-edit-mode-hook #'visual-line-mode))

;;; ERC

(use-package erc
  :defer t
  :ensure nil :straight nil
  :custom ((erc-autojoin-channels-alist
            '(("freenode.net" "#emacs" "#conkeror" "#clojure" "#concatenative" "#flink")))

           (erc-server "irc.freenode.net")
           (erc-port 6667)
           (erc-nick "ubolonton")
           (erc-try-new-nick-p nil)

           (erc-hide-list '("JOIN" "PART" "QUIT" "NICK"))
           (erc-track-exclude-types '("JOIN" "NICK" "PART" "QUIT" "MODE"
                                      "324" "329" "332" "333" "353" "477"))

           (erc-auto-query 'buffer)

           (erc-log-channels-directory "~/erc_logs/")
           (erc-save-buffer-on-part t)
           (erc-save-queries-on-quit t)
           (erc-log-write-after-send t)
           (erc-log-write-after-insert t))
  :config (defun ublt/erc ()
            (interactive)
            (erc :server "irc.freenode.net" :port 6667 :nick "ubolonton"
                 :password (read-passwd "Password on freenode: "))))

;;; Publish highlighted code fragments.
(use-package scpaste
  :custom ((scpaste-scp-destination "ubolonton@ubolonton.org:/home/ubolonton/paste")
           (scpaste-http-destination "https://ubolonton.org/paste")
           (scpaste-footer (concat "<p style='font-size: 12pt;'>Generated by "
                                   user-full-name
                                   " using <a href='https://p.hagelb.org'>scpaste</a> at %s. "
                                   (cadr (current-time-zone)) ". (<a href='%s'>original</a>)</p>"))))

(provide 'ublt-communication)
